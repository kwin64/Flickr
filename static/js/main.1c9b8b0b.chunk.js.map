{"version":3,"sources":["components/BLL/reducers/mainPageReducer.ts","components/UI/Phototable/Phototable.tsx","components/BLL/localStorage.ts","components/UI/Navbar/Bookmarks/Bookmarks.tsx","components/UI/Navbar/Bookmarks/BookmarksContainer.tsx","components/DAL/instance.ts","components/DAL/mainPageAPI.ts","components/UI/Pagination/Pagination.tsx","components/UI/Navbar/SearchPage/SearchPage.tsx","components/UI/Navbar/SearchPage/SearchPageContainer.tsx","components/UI/MainPage.tsx","components/UI/Navbar/Navbar.tsx","App.tsx","reportWebVitals.ts","components/BLL/store.ts","index.tsx","components/UI/Phototable/Phototable.module.css","components/UI/Navbar/Navbar.module.css","App.module.css","components/UI/Navbar/SearchPage/SearchPage.module.css","components/UI/Navbar/Bookmarks/Bookmarks.module.css","components/UI/MainPage.module.css","components/UI/Pagination/Pagination.module.css"],"names":["mainPageReducerType","Phototable","props","photos","buttonName","handlerOnClick","className","s","phototable","map","p","Paper","elevation","photo","photoContainer","src","server","id","secret","alt","onClick","title","setPhotoToLocalStorage","localStorageName","stringData","localStorage","setItem","getParseLocalStorageData","JSON","parse","getItem","Bookmarks","useState","photosLocalStorage","setPhotosLocalStorage","container","newPhotoData","filter","stringify","BookmarksContainer","instance","axios","create","baseURL","userAPI","keyword","page","perpage","get","initialState","pagination","pages","setNewPhotos","type","setPages","Pagination","useSelector","state","mainPageReducer","activePage","dispatch","useDispatch","changePage","currentPage","pagesCount","i","push","borderCount","Math","ceil","length","borderNumber","setBorderNumber","leftBorderPageNumber","rightBorderPageNumber","Button","variant","color","undefined","SearchPage","newKeyWord","textArea","onChange","placeholder","photosFromLocalStorage","SearchPageContainer","keyWord","setKeyWord","useEffect","nameUser","trim","getState","then","res","data","e","console","log","currentTarget","value","MainPage","content","Navbar","nav","Grid","direction","alignItems","to","activeClassName","active","IconButton","Cloud","fontSize","App","useStylesAppBar","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","AppBar","position","Toolbar","Typography","aria-label","aria-controls","aria-haspopup","mainPage","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1c9b8b0b.chunk.js","sourcesContent":["import {Dispatch} from \"redux\";\r\nimport {photoInfo, userAPI} from \"../../DAL/mainPageAPI\";\r\nimport {AppRootStateType} from \"../store\";\r\n\r\ntype ActionsType = ReturnType<typeof setNewPhotos>\r\n    | ReturnType<typeof setPages>\r\n    | ReturnType<typeof setCurrentPage>\r\n\r\nexport enum mainPageReducerType {\r\n    'SET-NEW-PHOTOS' = 'mainPage/SET-NEW-PHOTOS',\r\n    'SET-PAGES' = 'mainPage/SET-PAGES',\r\n    'SET-CURRENT-PAGE' = 'mainPage/SET-CURRENT-PAGE'\r\n}\r\n\r\nexport type InitialStateSearchKeyWordType = typeof initialState\r\nexport type PaginationType = {\r\n    page: number\r\n    pages: null | number\r\n    perpage: number\r\n}\r\n\r\nlet initialState = {\r\n    photos: [] as Array<photoInfo>,\r\n    pagination: {\r\n        page: 1,\r\n        pages: null,\r\n        perpage: 15,\r\n    } as PaginationType\r\n}\r\n\r\n\r\nexport const mainPageReducer = (state = initialState, action: ActionsType): InitialStateSearchKeyWordType => {\r\n    switch (action.type) {\r\n        case mainPageReducerType['SET-NEW-PHOTOS'] :\r\n            return {\r\n                ...state,\r\n                photos: action.photos\r\n            }\r\n        case mainPageReducerType['SET-PAGES'] :\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...state.pagination,\r\n                    pages: action.pages\r\n                }\r\n            }\r\n        case mainPageReducerType['SET-CURRENT-PAGE']:\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...state.pagination,\r\n                    page: action.currentPage,\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\nexport const setNewPhotos = (photos: Array<photoInfo>) => ({\r\n    type: mainPageReducerType['SET-NEW-PHOTOS'],\r\n    photos\r\n} as const)\r\nexport const setPages = (pages: number) => ({\r\n    type: mainPageReducerType['SET-PAGES'],\r\n    pages\r\n} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({\r\n    type: mainPageReducerType['SET-CURRENT-PAGE'],\r\n    currentPage\r\n} as const)\r\n\r\n//TC\r\nexport const searchNewPhotos = (nameUser: string) => (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n\r\n    const {page, perpage} = getState().mainPageReducer.pagination\r\n\r\n    try {\r\n        userAPI.getNewImages(nameUser, page, perpage)\r\n            .then(res => {\r\n                const {pages, photo} = res.data.photos\r\n                dispatch(setNewPhotos(photo))\r\n                dispatch(setPages(pages))\r\n            })\r\n    } catch (e) {\r\n        console.log('Error')\r\n    }\r\n}\r\n","import React from 'react';\nimport {photoInfo} from '../../DAL/mainPageAPI';\nimport s from './Phototable.module.css'\nimport Paper from '@material-ui/core/Paper';\n\ntype MainPagePropsType = {\n    photos: Array<photoInfo>\n    buttonName: string\n    handlerOnClick: (id: string) => void\n}\n\nexport const Phototable: React.FC<MainPagePropsType> = props => {\n\n    const {\n        photos,\n        buttonName,\n        handlerOnClick\n    } = props\n\n\n    return (\n        <div>\n            <div className={s.phototable}>\n                {photos.map(p => {\n                    return (\n                        <div key={p.id}>\n                            <Paper elevation={3}>\n                                <div className={s.photo} key={p.id}>\n                                    <div className={s.photoContainer}>\n                                        <img src={`https://live.staticflickr.com/${p.server}/${p.id}_${p.secret}.jpg`}\n                                             alt=\"\"\n                                        />\n                                    </div>\n                                    <button onClick={() => {\n                                        handlerOnClick(p.id)\n                                    }}\n                                    >{buttonName}</button>\n                                    <span>{p.title}</span>\n                                </div>\n                            </Paper>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    );\n}\n\n","export const setPhotoToLocalStorage = (localStorageName: string, stringData: string) => {\r\n    return localStorage.setItem(localStorageName, stringData);\r\n};\r\n\r\nexport const getParseLocalStorageData = (localStorageName: string) => {\r\n    return JSON.parse(localStorage.getItem(localStorageName) || '[]');\r\n};","import React, {useState} from 'react';\nimport s from './Bookmarks.module.css'\nimport {Phototable} from \"../../Phototable/Phototable\";\nimport {getParseLocalStorageData, setPhotoToLocalStorage} from \"../../../BLL/localStorage\";\nimport {photoInfo} from \"../../../DAL/mainPageAPI\";\n\ntype BookmarksPropsType = {}\n\nexport const Bookmarks: React.FC<BookmarksPropsType> = () => {\n\n    const [photosLocalStorage, setPhotosLocalStorage] = useState<Array<photoInfo>>(\n        getParseLocalStorageData('stateLocalStorage')\n    );\n\n    const deletePhotoLocalStorage = (id: string) => {\n\n        const newPhotoData = photosLocalStorage.filter(p => p.id !== id)\n\n        setPhotosLocalStorage(newPhotoData);\n        setPhotoToLocalStorage('stateLocalStorage', JSON.stringify(\n            newPhotoData\n        ))\n    }\n\n\n    return (\n        <div className={s.container}>\n            <Phototable photos={photosLocalStorage}\n                        buttonName={'Remove it!'}\n                        handlerOnClick={deletePhotoLocalStorage}\n            />\n        </div>\n    );\n}\n\n","import React from 'react';\nimport {Bookmarks} from \"./Bookmarks\";\n\ntype BookmarksContainerPropsType = {}\n\nexport const BookmarksContainer: React.FC<BookmarksContainerPropsType> = () => {\n\n\n    return (\n        <Bookmarks/>\n    );\n}\n\n","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://api.flickr.com/services/rest'\r\n})\r\n","import {instance} from \"./instance\";\r\n\r\nexport type photoInfo = {\r\n    farm: 66\r\n    id: string\r\n    isfamily: number\r\n    isfriend: number\r\n    ispublic: number\r\n    owner: string\r\n    secret: string\r\n    server: string\r\n    title: string\r\n}\r\n\r\nexport type newPhotos = {\r\n    photos: {\r\n        page: number,\r\n        pages: number,\r\n        perpage: number,\r\n        total: number,\r\n        photo: Array<photoInfo>\r\n    }\r\n    stat: string\r\n}\r\n\r\nexport const userAPI = {\r\n    getNewImages(keyword: string, page: number, perpage: number) {\r\n        return instance.get<newPhotos>(`?method=flickr.photos.search&api_key=07d85452f5459d91f976cb90272be7ac&tags=${keyword}&per_page=${perpage}&page=${page}&format=json&nojsoncallback=1`)\r\n    },\r\n}","import React, {useState} from 'react';\r\nimport s from './Pagination.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../BLL/store\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport {setCurrentPage} from \"../../BLL/reducers/mainPageReducer\";\r\n\r\nexport const Pagination: React.FC = () => {\r\n\r\n    const pages = useSelector<AppRootStateType, number | null>(state => state.mainPageReducer.pagination.pages)\r\n    const activePage = useSelector<AppRootStateType, number>(state => state.mainPageReducer.pagination.page)\r\n    const dispatch = useDispatch()\r\n\r\n    const changePage = (page: number) => {\r\n        dispatch(setCurrentPage(page))\r\n    }\r\n\r\n    const pagesCount: number[] = []\r\n\r\n    if (pages) {\r\n        for (let i = 1; i <= pages; i++) {\r\n            pagesCount.push(i)\r\n        }\r\n    }\r\n\r\n    const borderSize = 7\r\n    const borderCount = Math.ceil(pagesCount.length / borderSize)\r\n    const [borderNumber, setBorderNumber] = useState(1)\r\n    const leftBorderPageNumber = (borderNumber - 1) * borderSize + 1\r\n    const rightBorderPageNumber = borderNumber * borderSize\r\n\r\n    return (\r\n        <div className={s.container}>\r\n\r\n            {borderNumber > 1 && <Button variant=\"outlined\" color=\"primary\"\r\n                                         onClick={() => {\r\n                                             setBorderNumber(borderNumber - 1)\r\n                                         }}><ArrowLeftIcon/></Button>\r\n            }\r\n\r\n            {pagesCount\r\n                .filter(p => p >= leftBorderPageNumber && p <= rightBorderPageNumber)\r\n                .map(page => {\r\n                    return <Button color=\"primary\"\r\n                                   variant={activePage === page ? \"contained\" : undefined}\r\n                                   onClick={() => {\r\n                                       changePage(page)\r\n                                   }}\r\n                    >{page}</Button>\r\n                })\r\n            }\r\n\r\n            {borderCount > borderNumber && <Button variant=\"outlined\" color=\"primary\"\r\n                                                   onClick={() => {\r\n                                                       setBorderNumber(borderNumber + 1)\r\n                                                   }}><ArrowRightIcon/></Button>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useState} from 'react';\nimport {Pagination} from '../../Pagination/Pagination';\nimport {Phototable} from '../../Phototable/Phototable';\nimport s from './SearchPage.module.css'\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../../BLL/store\";\nimport {photoInfo} from \"../../../DAL/mainPageAPI\";\nimport {getParseLocalStorageData, setPhotoToLocalStorage} from \"../../../BLL/localStorage\";\n\ntype MainPagePropsType = {\n    newKeyWord: (e: ChangeEvent<HTMLInputElement>) => void\n}\n\nexport const SearchPage: React.FC<MainPagePropsType> = props => {\n\n    const {\n        newKeyWord\n    } = props\n\n    const photos = useSelector<AppRootStateType, Array<photoInfo>>(state => state.mainPageReducer.photos)\n\n    const [photosLocalStorage, setPhotosLocalStorage] = useState<Array<photoInfo>>(\n        getParseLocalStorageData('stateLocalStorage')\n    );\n\n    const addPhotoLocalStorage = (id: string) => {\n\n        const newPhotoData = photos.filter(p => p.id === id)\n        const photosFromLocalStorage = getParseLocalStorageData('stateLocalStorage');\n\n        setPhotosLocalStorage([...photosFromLocalStorage, newPhotoData[0]]);\n        setPhotoToLocalStorage('stateLocalStorage', JSON.stringify(\n            [...photosFromLocalStorage, newPhotoData[0]]\n        ))\n    }\n\n    return (\n        <div className={s.container}>\n            <input className={s.textArea}\n                   type=\"text\"\n                   onChange={newKeyWord}\n                   placeholder='Find images'\n            />\n            <Pagination/>\n            <Phototable photos={photos}\n                        buttonName={'Bookmarks it!'}\n                        handlerOnClick={addPhotoLocalStorage}\n            />\n        </div>\n    );\n}\n\n","import React, {ChangeEvent, useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {searchNewPhotos, setNewPhotos, setPages} from '../../../BLL/reducers/mainPageReducer';\nimport {SearchPage} from \"./SearchPage\";\nimport {AppRootStateType} from \"../../../BLL/store\";\n\ntype MainPageContainerPropsType = {}\n\nexport const SearchPageContainer: React.FC<MainPageContainerPropsType> = () => {\n\n    const dispatch = useDispatch()\n    const [keyWord, setKeyWord] = useState('')\n    const activePage = useSelector<AppRootStateType, number>(state => state.mainPageReducer.pagination.page)\n\n    useEffect(() => {\n        if (keyWord.trim()) {\n            dispatch(searchNewPhotos(keyWord.trim()))\n        }\n        if (keyWord === '') {\n            dispatch(setNewPhotos([]))\n            dispatch(setPages(0))\n        }\n    }, [activePage, dispatch, keyWord])\n\n    console.log(keyWord)\n\n    const newKeyWord = (e: ChangeEvent<HTMLInputElement>) => {\n        setKeyWord(e.currentTarget.value);\n    }\n\n    return (\n        <SearchPage newKeyWord={newKeyWord}\n        />\n    );\n}\n\n","import React from 'react';\r\nimport s from './MainPage.module.css'\r\nimport {SearchPageContainer} from \"./Navbar/SearchPage/SearchPageContainer\";\r\n\r\nexport const MainPage: React.FC = () => {\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <SearchPageContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import {Grid, IconButton} from '@material-ui/core';\r\nimport React from 'react';\r\nimport {Bookmarks, Cloud} from \"@material-ui/icons\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from \"./Navbar.module.css\"\r\n\r\nexport const Navbar: React.FC = () => {\r\n\r\n    return (\r\n        <div className={s.nav}>\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <NavLink to=\"/search\" activeClassName={s.active}>\r\n                    <IconButton>\r\n                        <Cloud fontSize='large'/>\r\n                    </IconButton>\r\n                </NavLink>\r\n                <NavLink to=\"/bookmarks\" activeClassName={s.active}>\r\n                    <IconButton>\r\n                        <Bookmarks fontSize='large'/>\r\n                    </IconButton>\r\n                </NavLink>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport s from './App.module.css';\nimport {BookmarksContainer} from \"./components/UI/Navbar/Bookmarks/BookmarksContainer\";\nimport {MainPage} from './components/UI/MainPage';\nimport {SearchPageContainer} from \"./components/UI/Navbar/SearchPage/SearchPageContainer\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport {Navbar} from \"./components/UI/Navbar/Navbar\";\n\nfunction App() {\n\n    const useStylesAppBar = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n    }));\n\n    return (\n\n        <div className={s.container}>\n            <AppBar position=\"static\">\n                <Toolbar>\n\n                    <Typography variant=\"h6\" className={useStylesAppBar().title}>\n                        Image Finder\n                    </Typography>\n\n                    {(\n                        <div>\n                            <IconButton\n                                aria-label=\"account of current user\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                color=\"inherit\"\n                            >\n                                <AccountCircle/>\n                            </IconButton>\n                        </div>\n                    )}\n\n                </Toolbar>\n            </AppBar>\n\n            <div className={s.mainPage}>\n                <Navbar/>\n                <Switch>\n                    <Route exact path='/' render={() => <Redirect to='/main'/>}/>\n                    <Route exact path='/main' render={() => <MainPage/>}/>\n                    <Route exact path='/bookmarks' render={() => <BookmarksContainer/>}/>\n                    <Route exact path='/search' render={() => <SearchPageContainer/>}/>\n                    <Route exact path='/404' render={() => <div>404 PAGE NO FOUND</div>}/>\n                    <Route exact path='*' render={() => <Redirect to='404'/>}/>\n                </Switch>\n            </div>\n\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={useStylesAppBar().title}>\n                        Copyrights\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        </div>\n\n    )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {mainPageReducer} from \"./reducers/mainPageReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    mainPageReducer\r\n})\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof store.getState>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.module.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from './components/BLL/store';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phototable\":\"Phototable_phototable__2xlEA\",\"photoContainer\":\"Phototable_photoContainer__1Cg5N\",\"photo\":\"Phototable_photo__2_n1l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3-2Lx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPage\":\"App_mainPage__24oRy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textArea\":\"SearchPage_textArea__2lLcP\",\"container\":\"SearchPage_container__r1cat\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Bookmarks_container__2GO--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MainPage_content__3C7Gj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Pagination_container__1QfhV\",\"activePage\":\"Pagination_activePage__vBV2Z\",\"page\":\"Pagination_page__2DspQ\"};"],"sourceRoot":""}